{"version":3,"sources":["constants/cartConstants.js","constants/productConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/cartReducers.js","reducers/productReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/ordersActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_GATEWAY","CART_CLEAR_ITEMS","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_FIVE_REQUEST","PRODUCT_TOP_FIVE_SUCCESS","PRODUCT_TOP_FIVE_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_RESET","ORDER_DELIVERED_REQUEST","ORDER_DELIVERED_SUCCESS","ORDER_DELIVERED_FAIL","ORDER_DELIVERED_RESET","reducer","combineReducers","cart","state","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","filter","paymentGateway","productList","products","loading","page","pages","error","productDetails","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","usersList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDelivered","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","e","preventDefault","push","location","pathname","inline","Control","name","onChange","target","value","className","Button","variant","details","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","text","color","style","Product","Card","_id","Img","src","image","Body","Title","Text","as","rating","numReviews","price","Loader","Spinner","animation","role","height","width","margin","display","Message","children","Alert","Paginate","split","console","log","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","search","sm","md","lg","xl","ProductScreen","match","productId","params","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","post","createProductReview","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","passwordConfirm","setPasswordConfirm","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","update","Table","striped","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentGateway","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","Number","index","create","paymentMethod","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDelivered","successDelivered","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","amount","currency","onSuccess","paymentResult","payOrder","deliveredOrder","UserListScreen","userList","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","categoy","brand","ProductEditScreen","setPrice","setImage","setBrand","category","setCategory","setCountInStock","setDescription","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","App","path","component","exact","OrderListScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e2a84b71.chunk.js","sourcesContent":["export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_GATEWAY = 'CART_SAVE_PAYMENT_GATEWAY'\r\n\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_FIVE_REQUEST = 'PRODUCT_TOP_FIVE_REQUEST'\r\nexport const PRODUCT_TOP_FIVE_SUCCESS = 'PRODUCT_TOP_FIVE_SUCCESS'\r\nexport const PRODUCT_TOP_FIVE_FAIL = 'PRODUCT_TOP_FIVE_FAIL'\r\nexport const PRODUCT_TOP_FIVE_RESET = 'PRODUCT_TOP_FIVE_RESET'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\n\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n\r\n\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET'\r\n\r\nexport const ORDER_DELIVERED_REQUEST = 'ORDER_DELIVERED_REQUEST'\r\nexport const ORDER_DELIVERED_SUCCESS = 'ORDER_DELIVERED_SUCCESS'\r\nexport const ORDER_DELIVERED_FAIL = 'ORDER_DELIVERED_FAIL'\r\nexport const ORDER_DELIVERED_RESET = 'ORDER_DELIVERED_RESET'\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { \r\n        productListReducers, \r\n        productDetailsReducers,\r\n        productDeleteReducers,\r\n        productCreateReducers,\r\n        productUpdateReducers,\r\n        productReviewCreateReducers,\r\n        produtTopRatedReducer\r\n} from './reducers/productReducers'\r\nimport { \r\n        userLoginReducer, \r\n        userRegisterReducer, \r\n        userDetailsReducer, \r\n        userUpdateProfileReducer,\r\n        userListReducer,\r\n        userDeleteReducer,\r\n        userUpdateReducer\r\n} from './reducers/userReducers'\r\nimport { \r\n        orderCreateReducers, \r\n        orderDetailsReducer, \r\n        orderPayReducer,\r\n        orderListReducer,\r\n        orderListAllReducer,\r\n        orderDeliveredReducer\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n        cart: cartReducer,\r\n\r\n        productList: productListReducers,\r\n        productDetails: productDetailsReducers,\r\n        productDelete: productDeleteReducers,\r\n        productCreate: productCreateReducers,\r\n        productUpdate: productUpdateReducers,\r\n        productReviewCreate: productReviewCreateReducers,\r\n        productTopRated: produtTopRatedReducer,\r\n\r\n        userLogin: userLoginReducer,\r\n        userRegister: userRegisterReducer,\r\n        userDetails: userDetailsReducer,\r\n        userUpdateProfile: userUpdateProfileReducer,\r\n        usersList: userListReducer,\r\n        userDelete: userDeleteReducer,\r\n        userUpdate: userUpdateReducer,\r\n\r\n        orderCreate: orderCreateReducers,\r\n        orderDetails: orderDetailsReducer,\r\n        orderPay: orderPayReducer,\r\n        orderDelivered: orderDeliveredReducer,\r\n        orderListMy: orderListReducer,\r\n        orderList: orderListAllReducer,\r\n        \r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\r\n        JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n        JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\r\n        JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n        cart: {\r\n                cartItems: cartItemsFromStorage,\r\n                shippingAddress: shippingAddressFromStorage\r\n        },\r\n        userLogin: { userInfo: userInfoFromStorage }\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n        reducer, initialState,\r\n        composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM,\r\n    CART_CLEAR_ITEMS,\r\n\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_GATEWAY\r\n\r\n} from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => \r\n                        x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems:[...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_GATEWAY:\r\n            return {\r\n                ...state,\r\n                paymentGateway: action.payload\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n\r\n    PRODUCT_TOP_FIVE_REQUEST,\r\n    PRODUCT_TOP_FIVE_SUCCESS,\r\n    PRODUCT_TOP_FIVE_FAIL,\r\n    PRODUCT_TOP_FIVE_RESET,\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const productListReducers = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                products: action.payload.products,\r\n                page: action.payload.page,\r\n                pages: action.payload.pages,\r\n            }\r\n\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducers = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                product: action.payload\r\n            }\r\n\r\n        case PRODUCT_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducers = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducers = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return { }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const produtTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_FIVE_REQUEST:\r\n            return { \r\n                loading: true, \r\n                products: [] \r\n            }\r\n\r\n        case PRODUCT_TOP_FIVE_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                products: action.payload \r\n            }\r\n\r\n        case PRODUCT_TOP_FIVE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n\r\n\r\n} from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LOGOUT:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_RESET,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_RESET,\r\n\r\n    ORDER_DELIVERED_REQUEST,\r\n    ORDER_DELIVERED_SUCCESS,\r\n    ORDER_DELIVERED_FAIL,\r\n    ORDER_DELIVERED_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading:true, orderItems:[], shippingAddress:{}}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { \r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n\r\n        case ORDER_PAY_SUCCESS:\r\n            return { \r\n                loading: false,\r\n                success: true,\r\n            }\r\n\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return { \r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_FAIL:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_MY_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListAllReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n\r\n        case ORDER_LIST_SUCCESS:\r\n            return { \r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case ORDER_LIST_RESET:\r\n            return {\r\n                orders: []\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliveredReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVERED_REQUEST:\r\n            return { \r\n                loading: true \r\n            }\r\n\r\n        case ORDER_DELIVERED_SUCCESS:\r\n            return { \r\n                loading: false,\r\n                success: true,\r\n            }\r\n\r\n        case ORDER_DELIVERED_FAIL:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DELIVERED_RESET:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nexport default function SearchBox() {\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    let history = useHistory()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(keyword){\r\n            history.push(`/?s=${keyword}&page=1`)\r\n        } else {\r\n            history.push(history.push(history.location.pathname))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='q'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                className = 'mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n\r\n            <Button \r\n                type='submit'\r\n                variant='outline-success'\r\n                className='p-2'\r\n            >Submit</Button>\r\n            \r\n        </Form>\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nimport {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n\r\n\r\n} from '../constants/userConstants'\r\n\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            {\r\n                'username': email,\r\n                'password': password\r\n            },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            {\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const details = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const update = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const list = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/users/delete/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/update/${user._id}`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, NavDropdown, Container, Row, Col, link } from 'react-bootstrap'\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nexport default function Header() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand>ProShop</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <SearchBox />\r\n                        <Nav className=\"ml-auto\">\r\n                            <LinkContainer to=\"/cart\">\r\n                                <Nav.Link>\r\n                                    <i className=\"fas fa-shopping-cart\"></i>\r\n                                    Cart\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to=\"/login\">\r\n                                    <Nav.Link>\r\n                                        <i className=\"fas fa-user\"></i>\r\n                                    Login\r\n                                </Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/users'>\r\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/productsList'>\r\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n\r\n                                    <LinkContainer to='/admin/orderList'>\r\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"text-center py-3\">Copyright &copy; Proshop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Rating({ value, text, color}) {\r\n    return (\r\n        <div className=\"rating\">\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className=\r\n                    {\r\n                        value >= 1\r\n                            ? 'fas fa-star'\r\n                            : value >= 0.5\r\n                                ? 'fas fa-star-half-alt'\r\n                                : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className=\r\n                    {\r\n                        value >= 2\r\n                            ? 'fas fa-star'\r\n                            : value >= 1.5\r\n                                ? 'fas fa-star-half-alt'\r\n                                : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className=\r\n                    {\r\n                        value >= 3\r\n                            ? 'fas fa-star'\r\n                            : value >= 2.5\r\n                                ? 'fas fa-star-half-alt'\r\n                                : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className=\r\n                    {\r\n                        value >= 4\r\n                            ? 'fas fa-star'\r\n                            : value >= 3.5\r\n                                ? 'fas fa-star-half-alt'\r\n                                : 'fas fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className=\r\n                    {\r\n                        value >= 5\r\n                            ? 'fas fa-star'\r\n                            : value >= 4.5\r\n                                ? 'fas fa-star-half-alt'\r\n                                : 'far fa-star'\r\n                    }>\r\n                </i>\r\n            </span>\r\n\r\n            <span>{text && text}</span>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Product({ product }) {\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} />\r\n            </Link>\r\n\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title>{product.name}</Card.Title>\r\n                </Link>\r\n\r\n                <Card.Text as=\"div\">\r\n                    <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                    </div>\r\n                </Card.Text>\r\n\r\n                <Card.Text as=\"h3\">\r\n                    ${product.price}\r\n                </Card.Text>\r\n\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                height: '100px',\r\n                width: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nexport default function Message({ variant, children }) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nexport default function Paginate({pages, page, keyword = '', isAdmin=false}) {\r\n\r\n    if (keyword) {\r\n        keyword = keyword.split('?s=')[1].split('&')[0]\r\n    }\r\n\r\n    console.log('KEYWORD:', keyword)\r\n\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {\r\n                    [...Array(pages).keys()].map(x => (\r\n                        <LinkContainer \r\n                            key={x+1} \r\n                            to={!isAdmin ?\r\n                                `/?s=${keyword}&page=${x+1}`\r\n                                : `/admin/productsList/?s=${keyword}&page=${x+1}`\r\n                                }\r\n                            >\r\n                            <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                        </LinkContainer>\r\n                    ))\r\n                }\r\n            </Pagination>\r\n        )\r\n    )\r\n}\r\n","import axios from 'axios'\r\n\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_FAIL,\r\n\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_UPDATE_FAIL,\r\n\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n\r\n    PRODUCT_TOP_FIVE_REQUEST,\r\n    PRODUCT_TOP_FIVE_SUCCESS,\r\n    PRODUCT_TOP_FIVE_FAIL,\r\n    PRODUCT_TOP_FIVE_RESET,\r\n\r\n} from '../constants/productConstants'\r\n\r\nconst config = {\r\n    headers: {\r\n        'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjE4MTg3MjA0LCJqdGkiOiJiNjBmNTAwY2EwMzQ0OGU4YjRiNDAyM2IwMTdjM2JmMyIsInVzZXJfaWQiOjF9.4Te0MXqMnaBWZKijhQdawKBSedBfyXACT48IuHErweI'\r\n    }\r\n}\r\n\r\nexport const listProducts = (keyword='') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(\r\n            `/api/products${keyword}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_FIVE_REQUEST })\r\n\r\n        const { data } = await axios.get(\r\n            `/api/products/top`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_FIVE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FIVE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n        const { data } = await axios.get(\r\n            `/api/products/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.delete(\r\n            `/api/products/${id}/delete`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/create`,\r\n            {},\r\n            config,\r\n           )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/${product._id}/update`,\r\n            product,\r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/products/${productId}/reviews`,\r\n            review,\r\n            config,\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nexport default function ProductCarousel() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productTopRated = useSelector(state => state.productTopRated)\r\n    const { error, loading, products } = productTopRated\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, dispatch)\r\n\r\n    return (\r\n        loading ? <Loader />\r\n        : error ? <Message variant='danger'>{error}</Message>\r\n        : (\r\n            <Carousel pause='hover' className='bg-dark'>\r\n                {\r\n                    products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                                <Carousel.Caption className='carousel.caption'>\r\n                                    <h4>{product.name} (${product.price})</h4>\r\n                                </Carousel.Caption>\r\n                            </Link>\r\n                        </Carousel.Item>\r\n                    ))\r\n                }\r\n            </Carousel>\r\n        )\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from \"../components/Product\";\r\nimport Loader from \"../components/Loader\"\r\nimport Message from \"../components/Message\"\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\nimport { listProducts } from '../actions/productActions';\r\n\r\nexport default function HomeScreen({ history }) {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products, page, pages } = productList\r\n\r\n    let keyword = history.location.search\r\n\r\n    console.log(keyword)\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword))\r\n    }, [dispatch, keyword])\r\n\r\n    return (\r\n        <div>\r\n            {!keyword && <ProductCarousel />}\r\n            <h1>Latest Products</h1>\r\n            {\r\n                loading ? <Loader />\r\n                    : error ? <Message variant='danger'>{error}</Message>\r\n                        :\r\n                        <Row>\r\n                            {\r\n                                products.map(product => (\r\n                                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                        <Product product={product} />\r\n                                    </Col>\r\n                                ))\r\n                            }\r\n                            <Paginate page={page} pages={pages} keyword={keyword} />\r\n                        </Row>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\n\r\nimport Rating from '../components/Rating'\r\nimport Loader from \"../components/Loader\"\r\nimport Message from \"../components/Message\"\r\n\r\nimport { listProductDetails, createProductReview } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nexport default function ProductScreen({ match, history }) {\r\n    const dispatch = useDispatch()\r\n\r\n    const productId = match.params.id\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const {\r\n        loading: loadingProductReview,\r\n        error: errorProductReview,\r\n        success: successProductReview\r\n    } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        dispatch(listProductDetails(match.params.id))\r\n\r\n    }, [dispatch, successProductReview, match])\r\n\r\n    const addToCartHandler = () => {\r\n        console.log('Add to cart', (match.params.id))\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    //Create review\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(\r\n            productId,\r\n            {\r\n                rating,\r\n                comment\r\n            }\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\r\n            {\r\n                loading ? <Loader />\r\n                    : error ? <Message variant='danger'>{error}</Message>\r\n                        :\r\n                        <div>\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid />\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <h3>{product.name}</h3>\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Rating\r\n                                                value={product.rating}\r\n                                                text={`${product.numReviews} reviews`}\r\n                                                color={'#f8e825'}\r\n                                            />\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Price: {`$${product.price}`}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            Description: {`$${product.description}`}\r\n                                        </ListGroup.Item>\r\n\r\n                                    </ListGroup>\r\n                                </Col>\r\n\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                        <ListGroup variant=\"flush\">\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Price:</Col>\r\n                                                    <Col>\r\n                                                        <strong>\r\n                                                            {`$${product.price}`}\r\n                                                        </strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Status:</Col>\r\n                                                    <Col>\r\n                                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Qty</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control\r\n                                                                as=\"select\"\r\n                                                                value={qty}\r\n                                                                onChange={(e) => setQty(e.target.value)}\r\n                                                            >\r\n                                                                {\r\n                                                                    [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                        <option key={x + 1} value={x + 1}>\r\n                                                                            { x + 1}\r\n                                                                        </option>\r\n                                                                    ))\r\n                                                                }\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Button\r\n                                                        onClick={addToCartHandler}\r\n                                                        className='btn-block'\r\n                                                        disabled={product.countInStock === 0}\r\n                                                        type='button'>\r\n                                                        Add to Cart\r\n                                                </Button>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                        </ListGroup>\r\n                                    </Card>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col md={6}>\r\n                                    <h4>Reviews</h4>\r\n                                    {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\r\n                                    <ListGroup variant='flush'>\r\n                                        {\r\n                                            product.reviews.map(review => (\r\n                                                <ListGroup.Item key={review._id}>\r\n                                                    <strong>{review.name}</strong>\r\n                                                    <Rating value={review.rating} color='#f8e835' />\r\n                                                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                    <p>{review.comment}</p>\r\n                                                </ListGroup.Item>\r\n                                            ))\r\n                                        }\r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Write a review</h4>\r\n\r\n                                            {loadingProductReview && <Loader />}\r\n                                            {\r\n                                                errorProductReview &&\r\n                                                <Message variant='danger'>{errorProductReview}</Message>\r\n                                            }\r\n                                            {\r\n                                                successProductReview &&\r\n                                                <Message variant='success'>Review Submitted</Message>\r\n                                            }\r\n\r\n                                            {\r\n                                                userInfo ? (\r\n                                                    <Form onSubmit={submitHandler}>\r\n                                                        <Form.Group controlId='rating'>\r\n                                                            <Form.Label>Rating</Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={rating}\r\n                                                                onChange={(e) => setRating(e.target.value)}\r\n                                                            >\r\n                                                                <option value=''>Select...</option>\r\n                                                                <option value='1'>1 - Poor</option>\r\n                                                                <option value='2'>2 - Fair</option>\r\n                                                                <option value='3'>3 - Good</option>\r\n                                                                <option value='4'>4 - Very Good</option>\r\n                                                                <option value='5'>5 - Excellent</option>\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Form.Group controlId='comment'>\r\n                                                            <Form.Label>Review</Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='textarea'\r\n                                                                row='5'\r\n                                                                value={comment}\r\n                                                                onChange={(e) => setComment(e.target.value)}\r\n                                                            >\r\n                                                            </Form.Control>\r\n                                                        </Form.Group>\r\n\r\n                                                        <Button\r\n                                                            disabled={loadingProductReview}\r\n                                                            type='submit'\r\n                                                            variant='primary'\r\n                                                        >\r\n                                                            Submit\r\n                                                        </Button>\r\n\r\n\r\n                                                    </Form>\r\n                                                ) : (\r\n                                                    <Message variant='info'>\r\n                                                        Please <Link to='/login'>login</Link> to write a review\r\n                                                    </Message>\r\n                                                )\r\n                                            }\r\n\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n","import axios from 'axios'\r\nimport { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    \r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_GATEWAY\r\n\r\n} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const config = {\r\n        headers: {\r\n            'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjE4MTg3MjA0LCJqdGkiOiJiNjBmNTAwY2EwMzQ0OGU4YjRiNDAyM2IwMTdjM2JmMyIsInVzZXJfaWQiOjF9.4Te0MXqMnaBWZKijhQdawKBSedBfyXACT48IuHErweI'\r\n        }\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`, config)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })    \r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n}\r\n\r\nexport const savePaymentGateway = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_GATEWAY,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentGateway', JSON.stringify(data))\r\n\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nexport default function CartScreen({ match, location, history }) {\r\n    const productId = match.params.id\r\n    const qty = location.search ? +location.search.split('=')[1] : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n    console.log('cartItems:', cartItems)\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n            </Col>\r\n            \r\n            <Col md={8}>\r\n                {\r\n                    cartItems.length === 0 ? (\r\n                        <Message variant='info'>\r\n                            Your cart is empty <Link to='/'>Go back</Link>\r\n                        </Message>\r\n                    ) : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map(item => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image src={item.image} alt={item.name} fluid rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${item.product}`}>{`${item.name}`}</Link>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            ${item.price}\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) => dispatch(addToCart(item.product, +e.target.value))}\r\n                                            >\r\n                                                {\r\n                                                    [...Array(item.countInStock).keys()].map((x) => (\r\n                                                        <option key={x + 1} value={x + 1}>\r\n                                                            { x + 1}\r\n                                                        </option>\r\n                                                    ))\r\n                                                }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    )\r\n                }\r\n            </Col>\r\n            \r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>SubTotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            {cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='btn-block'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed to Checkout\r\n\r\n                        </Button>\r\n\r\n                    </ListGroup.Item>\r\n\r\n                </Card>\r\n            </Col>\r\n\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nexport default function FormContainer({ children }) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { login } from '../actions/userActions'\r\n\r\nexport default function LoginScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { error, loading, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            { error && <Message variant='danger'>{error}</Message> }\r\n            { loading && <Loader /> }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link \r\n                    to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>        \r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { register } from '../actions/userActions'\r\n\r\nexport default function RegisterScreen({ location, history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userRegister, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(password !== passwordConfirm) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>User Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            { error && <Message variant='danger'>{error}</Message>}\r\n            { loading && <Loader />}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={passwordConfirm}\r\n                        onChange={(e) => setPasswordConfirm(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\nimport { details, update } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/ordersActions'\r\n\r\nexport default function ProfileScreen({ history }) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(details('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password !== passwordConfirm) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(update({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password,\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm password'\r\n                            value={passwordConfirm}\r\n                            onChange={(e) => setPasswordConfirm(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {\r\n                    loadingOrders ? (\r\n                        <Loader />\r\n                    ) : errorOrders ? (\r\n                        <Message variant='danger'>{errorOrders}</Message>\r\n                    ): (\r\n                        <Table striped responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Date</th>\r\n                                    <th>Total</th>\r\n                                    <th>Paid</th>\r\n                                    <th>Delivered</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map(order => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0,10)}</td>\r\n                                        <td>{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                            <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )}</td>\r\n                                        <td>{order.isDelivered? order.deliveredAt.substring(0, 10) : (\r\n                                            <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                                        )}</td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm'>Details</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    )\r\n                }\r\n\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n\r\n    ORDER_DELIVERED_REQUEST,\r\n    ORDER_DELIVERED_SUCCESS,\r\n    ORDER_DELIVERED_FAIL,\r\n    ORDER_DELIVERED_RESET,\r\n\r\n} from '../constants/orderConstants'\r\n\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nexport const create = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/orders/create',\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listAllOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deliveredOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVERED_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${order._id}/delivered`,\r\n            {},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVERED_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVERED_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nexport default function CheckoutSteps({ step1, step2, step3, step4 }) {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {\r\n                    step1 ? (\r\n                        <LinkContainer to='/login'>\r\n                            <Nav.Link>Login</Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                    ) : (\r\n                        <Nav.Link disabled>Login</Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {\r\n                    step2 ? (\r\n                        <LinkContainer to='/shipping'>\r\n                            <Nav.Link>Shipping</Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                    ) : (\r\n                        <Nav.Link disabled>Shipping</Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {\r\n                    step3 ? (\r\n                        <LinkContainer to='/payment'>\r\n                            <Nav.Link>Payment</Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                    ) : (\r\n                        <Nav.Link disabled>Payment</Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {\r\n                    step4 ? (\r\n                        <LinkContainer to='/placeorder'>\r\n                            <Nav.Link>Place Order</Nav.Link>\r\n                        </LinkContainer>\r\n\r\n                    ) : (\r\n                        <Nav.Link disabled>Place Order</Nav.Link>\r\n                    )\r\n                }\r\n            </Nav.Item>\r\n\r\n            \r\n\r\n\r\n        </Nav>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nexport default function ShippingScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode,\r\n            country\r\n        }))\r\n\r\n        history.push('/payment')\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n\r\n            <CheckoutSteps step1 step2 />\r\n\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter address'\r\n                        value={ address ? address : '' }\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter city'\r\n                        value={ city ? city : '' }\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={ postalCode ? postalCode : '' }\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={ country ? country : '' }\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\n\r\nimport { savePaymentGateway } from '../actions/cartActions'\r\n\r\nexport default function PaymentScreen({ history }) {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentGateway, setPaymentGateway] = useState('Paypal')\r\n\r\n\r\n    if (!shippingAddress.address) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentGateway(paymentGateway))\r\n\r\n        history.push('/placeorder')\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentGateway(e.target.value)}\r\n                        ></Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n\r\n        </FormContainer>\r\n\r\n\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { create } from '../actions/ordersActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nexport default function PlaceOrderScreen({ history }) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n    cart.totalPrice = (+cart.itemsPrice + +cart.shippingPrice + +cart.taxPrice)\r\n\r\n    if(!cart.paymentGateway) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(create({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentGateway,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                                {' '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentGateway}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {\r\n                                cart.cartItems.length === 0 ?\r\n                                    <Message variant='info'>\r\n                                        Your cart is empty\r\n                                    </Message> :\r\n                                    (\r\n                                        <ListGroup variant='flush'>\r\n                                            {\r\n                                                cart.cartItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X {item.price} = {(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))\r\n                                            }\r\n                                        </ListGroup>\r\n                                    )\r\n                            }\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Item:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport { getOrderDetails, payOrder, deliveredOrder } from '../actions/ordersActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVERED_RESET } from '../constants/orderConstants'\r\n\r\nexport default function OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading:loadingPay, success:successPay } = orderPay\r\n\r\n    const orderDelivered = useSelector(state => state.orderDelivered)\r\n    const { loading:loadingDelivered, success:successDelivered } = orderDelivered\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AXpC-IkajJVuFf8K20NodmLZR3_EEGEvLFgrhHjUtpyDQMgMmi--K6f8O-b0g2hzz5Y1gz6pF3Qo0euO&currency=BRL'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n\r\n        if (!order || successPay || successDelivered || order._id !== Number(orderId)) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVERED_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if(!order.isPaid) {\r\n            if(!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    }, [dispatch, order, orderId, successPay, successDelivered])\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliveredHandler = () => {\r\n        dispatch(deliveredOrder(order))\r\n    }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p><strong>Name: </strong>{order.user.name}</p>\r\n                            <p><strong>Email: </strong>{order.user.email}</p>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city},\r\n                                {' '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n\r\n                            {\r\n                                order.isDelivered ? (\r\n                                    <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                ) : (\r\n                                    <Message variant='warning'>Not Delivered</Message>\r\n                                )\r\n                            }\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                            ) : (\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {\r\n                                order.orderItems.length === 0 ?\r\n                                    <Message variant='info'>\r\n                                        Order is empty\r\n                                    </Message> :\r\n                                    (\r\n                                        <ListGroup variant='flush'>\r\n                                            {\r\n                                                order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={1}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n\r\n                                                            <Col>\r\n                                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                            </Col>\r\n\r\n                                                            <Col md={4}>\r\n                                                                {item.qty} X {item.price} = {(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))\r\n                                            }\r\n                                        </ListGroup>\r\n                                    )\r\n                            }\r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Item:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton \r\n                                            amount={order.totalPrice}\r\n                                            currency={'BRL'}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                        \r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n\r\n                        {loadingDelivered && <Loader />}\r\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn btn-block'\r\n                                    onClick={deliveredHandler}\r\n                                >\r\n                                    Marker Delivered\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        )}\r\n\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport { list, deleteUser } from '../actions/userActions'\r\n\r\nexport default function UserListScreen({ history }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.usersList)\r\n    const { loading, error, users } = userList\r\n\r\n    const user = useSelector(state => state.userLogin)\r\n    const { userInfo } = user\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if(userInfo && userInfo.isAdmin) {\r\n            dispatch(list())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if(window.confirm('Are you sure you want to delete this user?'))\r\n        dispatch(deleteUser(id))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Users</h1>\r\n            {\r\n                loading ? (<Loader />) :\r\n                    error ? (<Message variant='danger'>{error}</Message>) :\r\n                        (\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Name</th>\r\n                                        <th>Email</th>\r\n                                        <th>Admin</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        users.map(user => (\r\n                                            <tr key={user._id}>\r\n                                                <td>{user._id}</td>\r\n                                                <td>{user.name}</td>\r\n                                                <td>{user.email}</td>\r\n                                                <td>\r\n                                                    {user.isAdmin ? (\r\n                                                        <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                                                    ) : (<i className='fas fa-check' style={{ color: 'red' }}></i>)}\r\n                                                </td>\r\n                                                <td>\r\n                                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                        <Button variant='light' className='btn-sm'>\r\n                                                            <i className='fas fa-edit'></i>\r\n                                                        </Button>\r\n                                                    </LinkContainer>\r\n\r\n                                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                                        <i className='fas fa-trash'></i>\r\n                                                    </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { details, updateUser } from '../actions/userActions'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nexport default function UserEditScreen({ match, history }) {\r\n\r\n    const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/users')\r\n        } else {\r\n            if (!user.name || user._id !== Number(userId)) {\r\n                dispatch(details(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n\r\n    }, [user, userId, successUpdate, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({\r\n            _id: user._id,\r\n            name,\r\n            email,\r\n            password,\r\n            isAdmin\r\n        }))\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/users'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                <h1>Edit User</h1>\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Enter email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder='Enter password'\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Check\r\n                                type='checkbox'\r\n                                label='Is Admin'\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            ></Form.Check>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nexport default function ProductListScreen({ history, match }) {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { products, loading, error, page, pages } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\r\n\r\n    let keyword = history.location.search\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            console.log('Product Created:')\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts(keyword))\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\r\n\r\n    // Delete Product\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure you want to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    // Create Product\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n\r\n            {\r\n                loading ? (<Loader />) :\r\n                    error ? (<Message variant='danger'>{error}</Message>) :\r\n                        (\r\n                            <div>\r\n                                <Table striped bordered hover responsive className='table-sm'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th>Name</th>\r\n                                            <th>Price</th>\r\n                                            <th>Category</th>\r\n                                            <th>Brand</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            products.map(product => (\r\n                                                <tr key={product._id}>\r\n                                                    <td>{product._id}</td>\r\n                                                    <td>{product.name}</td>\r\n                                                    <td>${product.price}</td>\r\n                                                    <td>{product.categoy}</td>\r\n                                                    <td>{product.brand}</td>\r\n\r\n                                                    <td>\r\n                                                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                            <Button variant='light' className='btn-sm'>\r\n                                                                <i className='fas fa-edit'></i>\r\n                                                            </Button>\r\n                                                        </LinkContainer>\r\n\r\n                                                        <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                                            <i className='fas fa-trash'></i>\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Paginate page={page} pages={pages} isAdmin={true}/>\r\n                            </div>\r\n                        )\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nexport default function ProductEditScreen({ match, history }) {\r\n\r\n    const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { token } = userLogin.userInfo\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { error, loading, product } = productDetails\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productList')\r\n        } else {\r\n            if (!product.name || product._id !== Number(productId)) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, product, productId, successUpdate, history])\r\n\r\n\r\n    //Upload image\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        formData.append('product_id', productId)\r\n\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type':'multipart/form-data',\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.post('/api/products/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n\r\n        } catch (err) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    //Update product\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productsList'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter price'\r\n                                value={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter image'\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                            ></Form.Control>\r\n\r\n                            <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            >\r\n                            </Form.File>\r\n\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter brand'\r\n                                value={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter category'\r\n                                value={category}\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countInStock'>\r\n                            <Form.Label>Stock</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter stock'\r\n                                value={countInStock}\r\n                                onChange={(e) => setCountInStock(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter description'\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\n\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listAllOrders} from '../actions/ordersActions'\r\n\r\nexport default function ProductEditScreen({ history, match }) {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { orders, loading, error } = orderList\r\n    \r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listAllOrders())\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo])\r\n\r\n    return (\r\n        <div>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Orders</h1>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                loading ? (<Loader />) :\r\n                    error ? (<Message variant='danger'>{error}</Message>) :\r\n                        (\r\n                            <div>\r\n                                <Table striped bordered hover responsive className='table-sm'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>ID</th>\r\n                                            <th>USER</th>\r\n                                            <th>DATE</th>\r\n                                            <th>TOTAL</th>\r\n                                            <th>PAID</th>\r\n                                            <th>DELIVERED</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            orders.map(order => (\r\n                                                <tr key={order._id}>\r\n                                                    <td>{order._id}</td>\r\n                                                    <td>{order.user && order.user.name}</td>\r\n                                                    <td>${order.createdAt.substring(0,10)}</td>\r\n                                                    <td>{order.totalPrice}</td>\r\n                                                    <td>\r\n                                                        {order.isPaid ? (\r\n                                                        order.paidAt.substring(0, 10)\r\n                                                        ) : (\r\n                                                            <i className='fas fa-check' style={{color:'red'}}></i>\r\n                                                        )}\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        {order.isDelivered ? (\r\n                                                        order.deliveredAt.substring(0, 10)\r\n                                                        ) : (\r\n                                                            <i className='fas fa-check' style={{color:'red'}}></i>\r\n                                                        )}\r\n                                                    </td>\r\n\r\n\r\n                                                    <td>\r\n                                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                                            <Button variant='light' className='btn-sm'>\r\n                                                                Details\r\n                                                            </Button>\r\n                                                        </LinkContainer>\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                </Table>\r\n                            </div>\r\n                        )\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { Container } from 'react-bootstrap'\n\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport HomeScreen from './screens/HomeScreen' \nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <main className=\"py-3\">\n          <Container>\n            <Route path=\"/\" component={HomeScreen} exact />\n            <Route path=\"/login\" component={LoginScreen} />\n            <Route path=\"/register\" component={RegisterScreen} />\n            <Route path=\"/profile\" component={ProfileScreen} />\n            <Route path=\"/shipping\" component={ShippingScreen} />\n            <Route path=\"/payment\" component={PaymentScreen} />\n            <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n            <Route path=\"/product/:id\" component={ProductScreen} />\n            <Route path=\"/cart/:id?\" component={CartScreen} />\n            <Route path=\"/order/:id\" component={OrderScreen} />\n\n            <Route path=\"/admin/users\" component={UserListScreen} />\n            <Route path=\"/admin/user/:id/edit\" component={UserEditScreen} />\n\n            <Route path=\"/admin/productsList\" component={ProductListScreen} />\n            <Route path=\"/admin/product/:id/edit\" component={ProductEditScreen} />\n            <Route path=\"/admin/orderList\" component={OrderListScreen} />\n\n          </Container>\n        </main>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}